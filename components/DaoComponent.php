<?php

namespace app\components;

use yii\base\Component;
use yii\db\Connection;
use yii\db\Exception;
use yii\db\Query;

class DaoComponent extends Component
{
    /** @var Connection */
    public $connection;

    public function init()
    {
        $this->connection=\Yii::$app->db;
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @param $user_id
     * @return array
     */
    public function getActivityUser($user_id){
        $sql='select * from activity where user_id=:user';
        try {
            return $this->connection->createCommand($sql, [':user' => $user_id])
                ->queryAll();
        } catch (Exception $e) {
        }
    }

    public function getFirstBlocking(){
        $query = new Query();
        return $query->select(['id','title'])
            ->from('activity')
            ->andWhere(['isBlocking' => 1])
            ->orderBy(['title'=>SORT_DESC])
            ->one($this->connection);
    }

    /**
     * @return mixed
     */
    public function getCountActivity(){

        $query=new Query();
        return $query->from('activity')
            ->select('count(id) as cnt')
//            ->join('inner join','users','activity.user_id=user.id')
            ->createCommand()->rawSql;
//            ->scalar($this->connection);
    }

    /**
     * @return \yii\db\DataReader
     */
    public function getBigData(){

        $query=new Query();
        try {
            return $query->select(['id', 'title'])
                ->from('activity')
                ->andWhere(['isBlocking' => 1])
                ->orderBy(['title' => SORT_DESC])
                ->createCommand()->query();
        } catch (Exception $e) {
        }
    }

    /**
     * @throws \Throwable
     */
    public function insertsTransaction(){


        $this->connection->transaction(
            function($db){
            $this->connection->createCommand()->update('activity',['title'=>'qwe'], ['id'=>2])->execute();
        });
    }

    /**
     * @return array
     */
    public function getUsersAll(){

        $sql='SELECT * from users;';

        try {
            return $this->connection->createCommand($sql)->queryAll();
        } catch (Exception $e) {
        }
    }
}

